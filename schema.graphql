# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

type Block {
  hash: String!
  id: ID!
  merkleRootHash: String!
  number: Int!
  previousBlock: Block
  size: Float!
  slot: Slot!
  transactions: [Transaction]!
}

type Epoch {
  blocks: [Block]!
  number: Int!
  slots: [Slot!]!
  transactions: [Transaction]
}

type Ledger {
  blockHeight: Int!
}

type Mempool {
  transaction(id: ID!): Transaction!
  transactionCount: Int!
  transactions(id: ID!): [Transaction]!
}

type Query {
  blocks(filter: BlockFilter, ids: [String!]): [Block!]!
  epochs(numbers: [Int!]): [Epoch!]!
  transactions(filter: TransactionFilter, hashes: [String!]): [Transaction]!
}

type Slot {
  block: Block
  epoch: Epoch!
}

type Transaction {
  fee: Float!
  hash: String!
  id: ID!
  inputs: [TransactionInput!]!
  outputs: [TransactionOutput!]!
}

type TransactionInput {
  address: String!
  sourceTxId: String!
  sourceTxOutputIndex: Int!
}

type TransactionOutput {
  address: String!
  value: Int!
}

enum CacheControlScope {
  PRIVATE
  PUBLIC
}

input BlockFilter {
  afterHeight: Int
  beforeHeight: Int
  epoch: Int
  slot: Int
}

input TransactionFilter {
  epoch: Int
  hashes: [String]
  inBlockId: ID
  inBlockNo: Int
  includedAfter: DateTime
  includedBefore: DateTime
  slot: Int
}


"A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar DateTime

"The `Upload` scalar type represents a file upload."
scalar Upload
